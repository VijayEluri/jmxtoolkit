<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="jar" name="jmxtoolkit">

  <property name="version" value="0.20.4-dev"/>
  <property name="name" value="${ant.project.name}"/>

  <property name="src.dir" value="${basedir}/src"/>
  <property name="lib.dir" value="${basedir}/lib"/>
  <property name="build.dir" location="${basedir}/build"/>
  <property name="build.bin" location="${build.dir}/bin" />
  <property name="build.conf" location="${build.dir}/conf" />
  <property name="build.classes" location="${build.dir}/classes"/>
  <property name="build.templates.cacti" location="${build.dir}/cacti-tpl" />
  <property name="main-class" value="org/apache/hadoop/hbase/jmxtoolkit/JMXToolkit" />
  <property name="class-name" value="org.apache.hadoop.hbase.jmxtoolkit.JMXToolkit" />
  <property name="properties.prefix" value="hbase-${version}" />
  <property name="properties.extension" value="properties" />
  <property name="properties.name" value="${properties.prefix}-jmx.${properties.extension}" />
  <property name="properties.name.full" value="${build.conf}/${properties.name}" />
  <property name="properties.template" value="${basedir}/conf/current-jmx.properties.template" />
  <property name="properties.empty" value="${basedir}/conf/hadoop-hbase.properties" />
  <property name="jarfile.name" value="${properties.prefix}-${name}.jar" />
  <property name="jarfile.full" value="${build.dir}/${jarfile.name}" />
  <property name="script.template.cacti" value="${basedir}/bin/jmxtkcacti.sh.template" />
  <property name="script.name.cacti" value="${build.bin}/jmxtkcacti-${properties.prefix}.sh" />
  <property name="script.template.nagios" value="${basedir}/bin/jmxtknagios.sh.template" />
  <property name="script.name.nagios" value="${build.bin}/jmxtknagios-${properties.prefix}.sh" />
  <property name="javac.debug" value="on"/>
  <property name="javac.source" value="1.6"/>
  <property name="javac.depecration" value="true"/>
  <property name="javac.debuglevel" value="lines,vars,source" />

  <fileset id="lib.jars" dir="${basedir}" includes="lib/*.jar"/>
  <path id="classpath">
      <fileset refid="lib.jars"/>
      <pathelement location="${build.dir}"/>
  </path>

  <target name="init">
    <echo message="Using prefix: ${properties.prefix}" />
    <mkdir dir="${build.dir}" />
    <mkdir dir="${build.bin}" />
    <mkdir dir="${build.conf}" />
    <mkdir dir="${build.classes}" />
    <mkdir dir="${build.templates.cacti}" />

    <!-- copy all static configuration files -->
    <copy todir="${build.conf}">
      <fileset dir="${basedir}/conf" excludes="**/*.template" />
    </copy>
    <copy file="${properties.template}" tofile="${properties.name.full}" />
    <!-- copy all cacti templates -->
    <copy todir="${build.templates.cacti}">
      <fileset dir="${basedir}/cacti-tpl" />
    </copy>
    <!-- copy all static scripts -->
    <copy todir="${build.bin}">
      <fileset dir="${basedir}/bin" excludes="**/*.template" />
    </copy>
    <!-- copy templates into scripts path with new name and replace variables -->
    <copy file="${script.template.cacti}" tofile="${script.name.cacti}" />
    <exec executable="sed">
      <arg value="-i" />
      <arg value="-e" /> <arg value="s/@JARFILE_NAME@/${jarfile.name}/g" />
      <arg value="-e" /> <arg value="s/@PROPERTIES_NAME@/${properties.name}/g" />
      <arg value="${script.name.cacti}" />
    </exec>
    <copy file="${script.template.nagios}" tofile="${script.name.nagios}" />
    <exec executable="sed">
      <arg value="-i" />
      <arg value="-e" /> <arg value="s/@JARFILE_NAME@/${jarfile.name}/g" />
      <arg value="-e" /> <arg value="s/@PROPERTIES_NAME@/${properties.name}/g" />
      <arg value="${script.name.nagios}" />
    </exec>
    <!-- make all scripts executable -->
    <chmod perm="ugo+x" type="file">
      <fileset dir="${build.bin}" />
    </chmod>
  </target>

  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>

  <target name="compile" depends="init">
    <echo message="contrib: ${name}"/>
    <javac
      srcdir="${src.dir}"
      includes="**/*.java"
      destdir="${build.classes}"
      debug="${javac.debug}"
      debuglevel="${javac.debuglevel}"
      deprecation="${javac.deprecation}">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="jar" depends="compile"
    description="Compile and jar the project">
    <jar jarfile="${jarfile.full}" basedir="${build.classes}">
      <zipfileset dir="${build.bin}" prefix="bin" />
      <zipfileset dir="${build.conf}" prefix="conf" />
      <zipfileset dir="${build.templates.cacti}" prefix="cacti-tpl" />
      <manifest>
        <attribute name="Main-Class"
          value="${main-class}" />
      </manifest>
    </jar>
  </target>

  <target name="create-properties" depends="compile"
    description="Allows to create a specifc properties file">
    <java classname="${class-name}" failonerror="true"
      output="${build.conf}/${properties.name}">
      <syspropertyset id="systemprops">
        <propertyref builtin="commandline" />
      </syspropertyset>
      <arg line="-f ${properties.empty} -x -a create" />
      <classpath>
        <pathelement path="${build.classes}" />
      </classpath>
    </java>
  </target>

</project>
